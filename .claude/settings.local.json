{
  "permissions": {
    "allow": [
      "Bash(curl:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(rg:*)",
      "Bash(pnpm build)",
      "Bash(ls:*)",
      "Bash(git push:*)",
      "WebFetch(domain:kit-forge.replit.app)",
      "WebFetch(domain:github.com)",
      "Bash(grep:*)",
      "Bash(pnpm typecheck:*)",
      "Bash(node:*)",
      "Bash(pnpm rebuild:*)",
      "Bash(npm run build-release:*)",
      "Bash(pnpm ls:*)",
      "Bash(pnpm tsc:*)",
      "Bash(cat:*)",
      "Bash(rm:*)",
      "Bash(pnpm add:*)",
      "Bash(sed:*)",
      "Bash(chmod:*)",
      "Bash(bash:*)",
      "Bash(git mv:*)",
      "Bash(git rm:*)",
      "Bash(pnpm dev:clean:*)",
      "Bash(mv:*)",
      "Bash(pnpm dev:*)",
      "Bash(pnpm tsx:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(find:*)",
      "Bash(pnpm run:*)",
      "Bash(pnpm build:lib:*)",
      "Bash(timeout 15s pnpm dev)",
      "Bash(timeout 10s PORT=3010 pnpm dev)",
      "Bash(timeout:*)",
      "Bash(for file in wave-bars audio-bars apex-vercel prism-google pulse-spotify infinity-loops wordmark letter-mark)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(pnpm next:*)",
      "Bash(cp:*)",
      "Bash(for template in brand-network sophisticated-strokes border-effects nexus-ai-brand terra-eco-brand volt-electric-brand smart-hexagon organic-bark dynamic-diamond hand-sketch liquid-flow minimal-shape neon-glow architectural-grid)",
      "Bash(do if [ -f \"templates/$template.ts\" ])",
      "Bash(then echo \"✓ $template exists\")",
      "Bash(else echo \"✗ $template missing\")",
      "Bash(fi)",
      "Bash(git restore:*)",
      "Bash(npx peekaboo:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(claude mcp:*)",
      "Bash(jq:*)",
      "Bash(claude config get mcpServers)",
      "Bash(claude config)",
      "Bash(claude config list)",
      "Bash(claude config list:*)",
      "Bash(echo:*)",
      "Bash(claude config:*)",
      "Bash(~/bin/claude-maintenance.sh check:*)",
      "Bash(open http://localhost:3002)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_select_option",
      "mcp__playwright__browser_take_screenshot",
      "Bash(for template in architectural-grid border-effects brand-network clean-triangle crystal-blocks crystal-lattice dynamic-diamond golden-circle hand-sketch liquid-flow luxury-brand minimal-line minimal-shape neon-glow network-constellation nexus-ai-brand organic-bark premium-kinetic quantum-field simple-prism smart-hexagon sophisticated-strokes terra-eco-brand volt-electric-brand)",
      "Bash(do echo:*)",
      "Bash(npx tsc:*)",
      "mcp__filesystem__read_multiple_files",
      "Bash(for template in minimal-shape neon-glow network-constellation organic-bark)",
      "Bash(do)",
      "Bash(for template in quantum-field simple-prism smart-hexagon)",
      "Bash(if ! grep -q \"export.*drawVisualization\\|export.*draw.*=\" templates/$template.ts)",
      "Bash(then)",
      "Bash(for template in architectural-grid border-effects brand-network clean-triangle crystal-blocks crystal-lattice dynamic-diamond golden-circle hand-sketch liquid-flow minimal-line minimal-shape neon-glow network-constellation nexus-ai-brand organic-bark quantum-field simple-prism smart-hexagon sophisticated-strokes terra-eco-brand volt-electric-brand)",
      "Bash(if grep -q \"export { drawVisualization }\" templates/$template.ts)",
      "Bash(else)",
      "Bash(for template in border-effects brand-network crystal-blocks crystal-lattice dynamic-diamond hand-sketch liquid-flow minimal-line nexus-ai-brand sophisticated-strokes terra-eco-brand volt-electric-brand)",
      "Bash(if grep -q \"export const draw = drawVisualization\" templates/$template.ts)",
      "Bash(for template in wave-bars audio-bars wordmark letter-mark infinity-loops apex-vercel prism-google pulse-spotify spinning-triangles network-constellation sophisticated-strokes brand-network border-effects nexus-ai-brand terra-eco-brand volt-electric-brand clean-triangle golden-circle smart-hexagon organic-bark crystal-blocks crystal-lattice dynamic-diamond hand-sketch liquid-flow minimal-line minimal-shape neon-glow quantum-field simple-prism architectural-grid)",
      "Bash(do if ! grep -q \"export const code\" \"templates/$template.ts\")",
      "Bash(then echo \"Missing code export: $template\")",
      "Bash(awk:*)",
      "Bash(git reset:*)",
      "WebFetch(domain:reactflow.dev)",
      "Bash(git checkout:*)",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_wait_for",
      "Bash(pgrep:*)",
      "Bash(pnpm lint:*)",
      "mcp__peekaboo__image",
      "mcp__peekaboo__analyze",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_drag",
      "Bash(open http://localhost:3001)",
      "Bash(for file in *.ts)",
      "Bash(do if [ \"$file\" != \"index.ts\" ])",
      "Bash([ \"$file\" != \"types.ts\" ])",
      "Bash(then echo \"=== $file ===\")",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(mkdir:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "filesystem",
    "github",
    "obsidian",
    "peekaboo",
    "context7",
    "agent",
    "automator",
    "playwright",
    "tempo"
  ]
}